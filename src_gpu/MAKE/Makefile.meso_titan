# meso_titan = Makefile for the TITAN supercomputer

SHELL = /bin/sh

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler



CC =		nvcc
ifeq ($(DEBUG),1)
CCFLAGS =	-g -G -lineinfo -ccbin CC -Xcompiler -fopenmp -O0 -x cu -arch=sm_35 --maxrregcount 64
else
CCFLAGS =	-ccbin CC -Xcompiler -fopenmp -O3 -x cu -arch=sm_35 --maxrregcount 64
endif

ifeq ($(PROFILE),1)
CCFLAGS += -lineinfo -D_USE_NVTX
endif

SHFLAGS =	
DEPFLAGS =	-M

LINK =		CC
ifeq ($(DEBUG),1)
LINKFLAGS =	-O0 -g -fopenmp
else 
LINKFLAGS =     -O3 -fopenmp
endif


ifeq ($(PROFILE),1)
LIB      += -lnvToolsExt
endif

SIZE =		size
CP = 		cp

ARCHIVE =	ar
ARFLAGS =	-rcsv
SHLIBFLAGS =	-static

# ---------------------------------------------------------------------
# LAMMPS-specific settings
# specify settings for LAMMPS features you will use
# if you change any -D setting, do full re-compile after "make clean"

# LAMMPS ifdef settings, OPTIONAL
# see possible settings in doc/Section_start.html#2_2 (step 4)

LMP_INC =	-DLAMMPS_GZIP

# MPI library, REQUIRED
# see discussion in doc/Section_start.html#2_2 (step 5)
# can point to dummy MPI library in src/STUBS as in Makefile.serial
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC =       -I$(MPICH_DIR)/include
MPI_PATH = 
MPI_LIB =	

# FFT library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 6)
# can be left blank to use provided KISS FFT library
# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
# PATH = path for FFT library
# LIB = name of FFT library

FFT_INC =       
FFT_PATH = 
FFT_LIB =	

# JPEG library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 7)
# only needed if -DLAMMPS_JPEG listed with LMP_INC
# INC = path for jpeglib.h
# PATH = path for JPEG library
# LIB = name of JPEG library

JPG_INC =       
JPG_PATH = 	
JPG_LIB =	

# CUDA library, OPTINAL

CUDA_INC  = $(CRAY_CUDATOOLKIT_INCLUDE_OPTS)
CUDA_PATH = 
CUDA_LIB  =

# ---------------------------------------------------------------------
# build rules and dependencies
# no need to edit this section

include	Makefile.package.settings
include	Makefile.package

EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(PKG_SYSINC) $(CUDA_INC)
EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(PKG_SYSPATH) $(CUDA_PATH)
EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(PKG_SYSLIB) $(CUDA_LIB)

# Path to src files

vpath %.cpp ..
vpath %.cu ..
vpath %.h ..

# Link target

$(EXE):	$(OBJ)
	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
	$(SIZE) $(EXE)
	$(CP) $(EXE) $(ATLAS)

# Library targets

lib:	$(OBJ)
	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)

shlib:	$(OBJ)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
        $(OBJ) $(EXTRA_LIB) $(LIB)

# Compilation rules

%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cpp
	$(CC) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

%.o:%.cu
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cu
	$(CC) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

# Individual dependencies

DEPENDS = $(OBJ:.o=.d)
sinclude $(DEPENDS)
